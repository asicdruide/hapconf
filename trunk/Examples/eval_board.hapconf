#!/usr/bin/env perl

use HAPCONF;

#
# the eval board has the following input switches
#
# led1    (2:on)       (4:on)       (6:on)
# led2    1:2:off      3:4:off      5:6:off
# led3    (1:on)       (3:on)       (5:on)
# led4
# led5
# led6    (7:on)       (8:on)       (9:on)
# led7     7:off        8:off        9:off
# led8
# led9
# led10   10:on         11:on        12:on
# led11   10:off        11:off       12:off
# led12
# led13
#                       (13:on)
#                        13:off
#
# modules:
#  * button, back box13
#  * relay, bistable, NO
#  * RGB LED
#  * IR RxTx
#  * Ethernet
#
# 9 LED connected to 6 relay channels and 3 dimmer channels.
#

# create setup...
HAPCONF->new("eval_board");




##############################################################################
# register and configure network nodes
##############################################################################
ethernet                 ("eth")
  ->url                  ("192.168.0.100:1001")
;

button_back_box13        ("bbb")
  ->id                   (6 , 8)
                         # message name            event     port
  ->port_name            ( "1=B1" )
  ->port_name            ( "2=B2" )
  ->port_name            ( "3=B3" )
  ->port_name            ( "4=B4" )
  ->port_name            ( "5=B5" )
  ->port_name            ( "6=B6" )
  ->port_name            ( "7=B7" )
  ->port_name            ( "8=B8" )
  ->port_name            ( "9=B9" )
  ->port_name            ("10=B10")
  ->port_name            ("11=B11")
  ->port_name            ("12=B12")
  ->port_name            ("13=B13")
  ->message              ("1down"                , "B1 :c")
  ->message              ("1up"                  , "B2 :c")
  ->message              ("2down"                , "B3 :c")
  ->message              ("2up"                  , "B4 :c")
  ->message              ("3down"                , "B5 :c")
  ->message              ("3up"                  , "B6 :c")
  ->message              ("4up"                  , "B7 :c")
  ->message              ("5up"                  , "B8 :c")
  ->message              ("6up"                  , "B9 :c")
  ->message              ("7up"                  , "B10:c")
  ->message              ("7down"                , "B10:o")
  ->message              ("8up"                  , "B11:c")
  ->message              ("8down"                , "B11:o")
  ->message              ("9up"                  , "B12:c")
  ->message              ("9down"                , "B12:o")
  ->message              ("all_off"              , "B13:c")
  ->notes                ("configured by hapconf")
  ->thermostat_threshold (22.0)
  ->thermostat_hysteresis( 1.0)
  ->temperature_offset   ( 0.0)
;


relay_bistable_NO        ("relay")
  ->id                   (3 , 8)
  ->port_name            ("1=K1" )
  ->port_name            ("2=K2" )
  ->port_name            ("3=K3" )
  ->port_name            ("4=K4" )
  ->port_name            ("5=K5" )
  ->port_name            ("6=K6" )
                         # message name            event     port
  ->message              ("K1_on"                , "K1:is_on" )
  ->message              ("K1_off"               , "K1:is_off")
  ->message              ("K2_on"                , "K2:is_on" )
  ->message              ("K2_off"               , "K2:is_off")
  ->message              ("K3_on"                , "K3:is_on" )
  ->message              ("K3_off"               , "K3:is_off")
  ->message              ("K4_on"                , "K4:is_on" )
  ->message              ("K4_off"               , "K4:is_off")
  ->message              ("K5_on"                , "K5:is_on" )
  ->message              ("K5_off"               , "K5:is_off")
  ->message              ("K6_on"                , "K6:is_on" )
  ->message              ("K6_off"               , "K6:is_off")
                         # state      command             port list             trigger message
  ->box                  ("enabled" , "4up"    , "K1=toggle")
  ->box                  ("enabled" , "5up"    , "K2=toggle")
  ->box                  ("enabled" , "6up"    , "K3=toggle")

  ->box                  ("enabled" , "7up"    , "K4=toggle")
  ->box                  ("enabled" , "7down"  , "K4=toggle")

  ->box                  ("enabled" , "8up"    , "K5=toggle")
  ->box                  ("enabled" , "8down"  , "K5=toggle")

  ->box                  ("enabled" , "9up"    , "K6=toggle")
  ->box                  ("enabled" , "9down"  , "K6=toggle")

  ->box                  ("enabled" , "all_off", "K1,K2,K3,K4,K5,K6=off"  )

  ->box                  ("enabled" , "1up"    , "K1,K2,K3,K4,K5,K6=on"   )
  ->box                  ("enabled" , "1up"    , "K6               =off#1")
  ->box                  ("enabled" , "1up"    , "K5               =off#2")
  ->box                  ("enabled" , "1up"    , "K4               =off#3")
  ->box                  ("enabled" , "1up"    , "K3               =off#4")
  ->box                  ("enabled" , "1up"    , "K2               =off#5")
  ->box                  ("enabled" , "1up"    , "K1               =off#6")

;

# resolve cyclic dependency between bbb and relay...
node                     ("bbb")
                         # state      command          port list                trigger message   group
  ->box                  ("enabled" , "K1_on" , "B7=on"       )
  ->box                  ("enabled" , "K1_off", "B7=off"      )
  ->box                  ("enabled" , "K2_on" , "B8=on"       )
  ->box                  ("enabled" , "K2_off", "B8=off"      )
  ->box                  ("enabled" , "K3_on" , "B9=on"       )
  ->box                  ("enabled" , "K3_off", "B9=off"      )
;



printf "flash configuration into modules? (yN) : ";
my $answer = <STDIN>;

if ($answer =~ m/^[jJyY]$/) {
  connect();
  flash_fast("bbb" , "relay");
  disconnect();
}

